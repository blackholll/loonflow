# Generated by Django 4.2.2 on 2025-10-07 05:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('workflow', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.JSONField(blank=True, default=dict, verbose_name='label')),
                ('creator_id', models.UUIDField(default=uuid.uuid4, editable=False, null=True, verbose_name='creator_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('tenant_id', models.UUIDField(default='00000000-0000-0000-0000-000000000001', verbose_name='tenant_id')),
                ('title', models.CharField(blank=True, default='', help_text="ticket's title", max_length=500, verbose_name='title')),
                ('act_state', models.CharField(choices=[('in_draft', 'in-draft'), ('on_going', 'on-going'), ('rejected', 'rejected'), ('withdrawn', 'withdrawn'), ('finished', 'finished'), ('closed', 'closed')], verbose_name='act state')),
                ('parent_ticket', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_parent_ticket', to='ticket.record')),
                ('parent_ticket_node', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_parent_ticket_node', to='workflow.node')),
                ('workflow', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_workflow', to='workflow.record')),
                ('workflow_version', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_workflow_version', to='workflow.version')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.JSONField(blank=True, default=dict, verbose_name='label')),
                ('creator_id', models.UUIDField(default=uuid.uuid4, editable=False, null=True, verbose_name='creator_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('tenant_id', models.UUIDField(default='00000000-0000-0000-0000-000000000001', verbose_name='tenant_id')),
                ('as_creator', models.BooleanField(default=False, verbose_name='as creator')),
                ('as_assignee', models.BooleanField(default=False, verbose_name='as assignee')),
                ('as_processor', models.BooleanField(default=False, verbose_name='as processor')),
                ('as_cc_recipient', models.BooleanField(default=False, verbose_name='as cc recipient')),
                ('assignee_node_ids', models.CharField(blank=True, default='', max_length=2000, verbose_name='assignee node ids')),
                ('ticket', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_user', to='ticket.record')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.JSONField(blank=True, default=dict, verbose_name='label')),
                ('creator_id', models.UUIDField(default=uuid.uuid4, editable=False, null=True, verbose_name='creator_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('tenant_id', models.UUIDField(default='00000000-0000-0000-0000-000000000001', verbose_name='tenant_id')),
                ('assignee_type', models.CharField(max_length=50, null=True, verbose_name='assignee type')),
                ('assignee', models.CharField(default='', max_length=2000, null=True, verbose_name='assignee')),
                ('is_active', models.BooleanField(default=True, help_text='whether the node is active', verbose_name='is active')),
                ('in_consult', models.BooleanField(default=False, help_text='whether in consult status', verbose_name='in consult status')),
                ('in_parallel', models.BooleanField(default=False, help_text='whether in parallel status', verbose_name='in parallel status')),
                ('in_accept_wait', models.BooleanField(default=False, help_text='whether in accept wait status', verbose_name='in accept wait status')),
                ('hook_status', models.CharField(choices=[('', 'N/A'), ('in_progress', 'IN-PROGRESS'), ('success', 'SUCCESS'), ('failure', 'FAILURE')], max_length=50, null=True, verbose_name='hook running status')),
                ('all_assignee_result', models.JSONField(blank=True, verbose_name='all assignee result')),
                ('consult_from', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_node_consult_from', to=settings.AUTH_USER_MODEL)),
                ('consult_target', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_node_consult_target', to=settings.AUTH_USER_MODEL)),
                ('node', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_node_node', to='workflow.node')),
                ('parallel_node', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_node_parallel_node', to='workflow.node')),
                ('ticket', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ticket_node_ticket', to='ticket.record')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlowHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.JSONField(blank=True, default=dict, verbose_name='label')),
                ('creator_id', models.UUIDField(default=uuid.uuid4, editable=False, null=True, verbose_name='creator_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('tenant_id', models.UUIDField(default='00000000-0000-0000-0000-000000000001', verbose_name='tenant_id')),
                ('action_type', models.CharField(choices=[('create', 'create'), ('forward', 'forward'), ('consult', 'consult'), ('consult_submit', 'consult_submit'), ('accept', 'accept'), ('comment', 'comment'), ('delete', 'delete'), ('force_close', 'force_close'), ('force_alter_node', 'force_alter_node'), ('withdraw', 'withdraw'), ('hook', 'hook'), ('other', 'other')], max_length=50, null=True, verbose_name='action type')),
                ('comment', models.CharField(default='', max_length=10000, null=True, verbose_name='comment')),
                ('processor_type', models.CharField(choices=[('', 'none'), ('user', 'user'), ('hook', 'hook'), ('timer', 'timer')], max_length=50, verbose_name='processor_type')),
                ('processor', models.CharField(blank=True, default='', max_length=50, verbose_name='processor')),
                ('ticket_data', models.JSONField(blank=True, default=dict, verbose_name='ticket_data')),
                ('action', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workflow.edge')),
                ('node', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workflow.node')),
                ('ticket', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='ticket.record')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.JSONField(blank=True, default=dict, verbose_name='label')),
                ('creator_id', models.UUIDField(default=uuid.uuid4, editable=False, null=True, verbose_name='creator_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('tenant_id', models.UUIDField(default='00000000-0000-0000-0000-000000000001', verbose_name='tenant_id')),
                ('field_key', models.CharField(max_length=50, verbose_name='field_key')),
                ('field_type', models.CharField(choices=[('text', 'text'), ('number', 'number'), ('date', 'date'), ('datetime', 'datetime'), ('time', 'time'), ('select', 'select'), ('cascade', 'cascade'), ('user', 'user'), ('file', 'file'), ('rich_text', 'rich_text')], max_length=50, verbose_name='field_type')),
                ('common_value', models.CharField(max_length=2000, null=True, verbose_name='common_value')),
                ('number_value', models.DecimalField(decimal_places=10, max_digits=20, null=True, verbose_name='number')),
                ('date_value', models.DateField(null=True, verbose_name='date value')),
                ('datetime_value', models.DateTimeField(null=True, verbose_name='datetime_value')),
                ('time_value', models.TimeField(null=True, verbose_name='time_value')),
                ('rich_text_value', models.TextField(null=True, verbose_name='rich_text_value')),
                ('ticket', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='ticket.record')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
